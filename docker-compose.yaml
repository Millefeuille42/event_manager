services:
  redis:
    pull_policy: never
    restart: always
    build:
      context: ./redis
      dockerfile: Dockerfile
      args:
        - REDIS_PASSWORD=${redis_password}
    image: event_manager_redis
    ports:
      - ${ext_redis_port}:6379
  back:
    pull_policy: never
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: event_manager_back
    depends_on:
      - redis
    env_file:
      - .env
    ports:
      - '5000:5000'
  front:
    pull_policy: never
    restart: always
    depends_on:
      back:
        condition: service_started
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_BACK_URL=${REACT_APP_BACK_URL}
    image: event_manager_front
    env_file:
      - .env
    ports:
      - '3000:3000'
  proxy:
    pull_policy: never
    restart: always
    depends_on:
      - back
      - front
    build:
      context: ./proxy
      dockerfile: Dockerfile
      args:
        - SSL_KEY=${proxy_key}
        - SSL_CERT=${proxy_cert}
    image: event_manager_proxy
    env_file:
      - .env
    ports:
      - ${proxy_port}:443
      - 80:80
    volumes:
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
